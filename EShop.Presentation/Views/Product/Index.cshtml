@using EShop.Domain.Models
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@model ProductListVewModel
@inject SignInManager<User> SignInManager

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
@if (SignInManager.IsSignedIn(User) && User.FindFirst(ClaimTypes.Role) != null && User.FindFirst(ClaimTypes.Role)!.Value.Equals("Admin"))
{
    <div class="text-end">
        <a href="@Url.Action("Create", "Product")" class="btn btn-success">Create New Product</a>
    </div>
}
<h1>Product List</h1>
@if(Model.Products.Count == 0)
{
    <p>No products found</p>
}
else
{
    <div class="row">
        @foreach (var product in Model.Products)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card h-100">
                    <img src="~/images/products/@product.Img" class="card-img-top " alt="@product.Description">
                    <div class="card-body">
                        <h5 class="card-title">@product.Description</h5>
                        <p class="card-text">Price: @product.Price</p>
                        <p class="card-text">Quantity: @product.Quantity</p>
                        <p class="card-text">Product Type: @product.Type.Name</p>
                        <a href="@Url.Action("GetProduct", "Product", new { id = product.Id })" class="btn btn-primary">View Details</a>
                    </div>
                </div>
            </div>
        }
    </div>
}
<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (Model.PageNumber > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = 1, pageSize = Model.PageSize })" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                    <span class="sr-only">First</span>
                </a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1, pageSize = Model.PageSize })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
        }

        @for (int i = 1; i <= Math.Ceiling((double)Model.TotalItems / Model.PageSize); i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i, pageSize = Model.PageSize })">@i</a>
            </li>
        }

        @if (Model.PageNumber < Math.Ceiling((double)Model.TotalItems / Model.PageSize))
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1, pageSize = Model.PageSize })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = Math.Ceiling((double)Model.TotalItems / Model.PageSize), pageSize = Model.PageSize })" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                    <span class="sr-only">Last</span>
                </a>
            </li>
        }
    </ul>
</nav>