@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Security.Claims
@using EShop.Domain.Models
@model EShop.Presentation.Models.Product.ProductViewModel
@inject SignInManager<User> SignInManager

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}

<div class="col-md-12">
    <a href="@Url.Action("Index", "Product")" class="btn btn-primary"><i class="fas fa-arrow-left"></i>Back</a>
</div>
<div class="row mt-3">
    <div class="col text-left">
        <h1>Product Details</h1>
    </div>
    @if (SignInManager.IsSignedIn(User) && User.FindFirst(ClaimTypes.Role) != null && User.FindFirst(ClaimTypes.Role)!.Value.Equals("Admin"))
    {
        <div class="col text-end">
            <a href="@Url.Action("Update", "Product", new { id = Model.Id })" class="btn btn-primary">Edit</a>
            <form action="@Url.Action("Delete", "Product", new { id = Model.Id })" method="post" onsubmit="return confirm('Are you sure you want to delete this product?');">
                <button type="submit" class="btn btn-danger">Delete</button>
            </form>
        </div>
    }
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card" style="max-width: fit-content">
            @if (Model.Img is not null)
            {
                <img src="~/images/products/@Model.Img" class="card-img-top" style="max-height: 500px; max-width: min-content" alt="">
            }
            else
            {
                <h3>No image</h3>
            }
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">@Model.Description</h5>
                <p class="card-text">Price: $@Model.Price</p>
                <p class="card-text">Quantity: @Model.Quantity</p>
                <p class="card-text">Product Type: @Model.ProductType</p>
                <p class="card-text">Likes count: @Model.LikeCount</p>
                @if (SignInManager.IsSignedIn(User) && User.FindFirst(ClaimTypes.Role) != null && !User.FindFirst(ClaimTypes.Role)!.Value.Equals("Admin"))
                {
                    <form method="post" action="@Url.Action("AddItem", "Basket")">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <input type="hidden" name="price" value="@Model.Price" />
                        <div class="form-group">
                            <label for="quantity">Quantity:</label>
                            <input type="number" class="form-control" id="quantity" name="quantity" value="1" min="1" />
                        </div>
                        <button type="submit" class="btn btn-success">Add to Cart</button>
                    </form>
                }
                @if (!SignInManager.IsSignedIn(User) || (User.FindFirst(ClaimTypes.Role)?.Value != "Admin"))
                {
                <form method="post" action="@Url.Action(Model.IsLikedByCurrentUser ? "Unlike" : "AddLike", "Product")">
                    <input type="hidden" name="productId" value="@Model.Id" />
                    <button type="submit" class="btn btn-primary">@(!Model.IsLikedByCurrentUser ? "Like" : "Unlike")</button>
                </form>
                }
            </div>
        </div>
    </div>
</div>